---
// layouts
import Layout from "@/layouts/BaseLayout";

// components
import { timeAgo } from "@/functions/DateTime";
import { getCollection } from "astro:content";
import Container from "@/components/content/Container";
import Figure from "@/components/image/Figure";
import Grid from "@/components/image/Grid";
import Heading from "@/components/content/Heading";
import Picture from "@/components/image/Picture";
import Prose from "@/components/content/Prose";
import RelatedPrimary from "@/components/shoots/related/Primary";
import RelatedSecondary from "@/components/shoots/related/Secondary";
import Section from "@/components/content/Section";
import Split from "@/components/content/Split";

// content
export async function getStaticPaths() {
    const shoots = await getCollection("shoots");
    return shoots.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

console.log(entry.body && `true`);
---

<Layout title={entry.data.title} description={entry.data.description} classes="" footerPadding={false}>
    <Picture src={entry.data.images.hero} class="h-[50svh] object-cover" rounded={false} />

    <div class="-mt-24">
        <Section>
            <Container size="large">
                <div class="bg-regent-50 p-12 rounded-lg space-y-24">
                    <Heading>
                        <h1 slot="heading">{entry.data.title}</h1>

                        <div slot="middle" class="flex flex-row gap-3">
                            <time class="pill pill-secondary" datetime={entry.data.date}>
                                {timeAgo(entry.data.date)}
                            </time>

                            <div class="pill pill-primary">{entry.data.category}</div>
                        </div>

                        <div slot="description">{entry.data.description}</div>
                    </Heading>

                    {
                        entry.data.customLayout ? (
                            <Content />
                        ) : entry.body ? (
                            <Split size="base" float={true}>
                                <div slot="heading">
                                    <Prose>
                                        <Content />
                                    </Prose>
                                </div>

                                <div class="space-y-12">
                                    <div class="flex flex-row justify-start gap-10">
                                        {entry.data.location && (
                                            <div>
                                                <div class="text-lg font-medium">Location</div>
                                                <div>{entry.data.location.text}</div>
                                            </div>
                                        )}

                                        {entry.data.auction && (
                                            <>
                                                <div>
                                                    <div class="text-lg font-medium">Auction</div>
                                                    <a class="flex items-center gap-1" href={entry.data.auction.url}>
                                                        <span>{entry.data.auction.site}</span>
                                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
                                                            <path
                                                                stroke-linecap="round"
                                                                stroke-linejoin="round"
                                                                d="M13.5 6H5.25A2.25 2.25 0 0 0 3 8.25v10.5A2.25 2.25 0 0 0 5.25 21h10.5A2.25 2.25 0 0 0 18 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"
                                                            />
                                                        </svg>
                                                    </a>
                                                </div>

                                                <div>
                                                    <div class="text-lg font-medium">Price</div>
                                                    <div>${entry.data.auction.price.toLocaleString()}</div>
                                                </div>
                                            </>
                                        )}
                                    </div>

                                    <Grid>
                                        {entry.data.images.gallery.map((p) => (
                                            <Figure src={p} />
                                        ))}
                                    </Grid>
                                </div>
                            </Split>
                        ) : (
                                <div class="space-y-12">
                                    <div class="flex flex-row justify-start gap-10">
                                        {entry.data.location && (
                                            <div>
                                                <div class="text-lg font-medium">Location</div>
                                                <div>{entry.data.location.text}</div>
                                            </div>
                                        )}
                                    </div>

                                    <Grid>
                                        {entry.data.images.gallery.map((p) => (
                                            <Figure src={p} />
                                        ))}
                                    </Grid>
                                </div>
                        )
                    }
                </div>
            </Container>

            <Container>
                <div class="space-y-16 py-24">
                    <h2 class="text-center">Related Shoots</h2>
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                        <RelatedPrimary slug={entry.data.related[0]} />

                        <div class="space-y-8">
                            {entry.data.related.slice(1).map((r) => <RelatedSecondary slug={r} />)}
                        </div>
                    </div>
                </div>
            </Container>
        </Section>
    </div>
</Layout>

<style>
    :global(h2) {
        @apply text-balance;
    }
</style>
