---
// layout
import Layout from "@/layouts/BaseLayout";

// imports
import { getCollection } from "astro:content";
import { slugify } from "@/functions/Misc"
import Container from "@/components/content/Container";
import Image from "@/components/image/Image";
import Heading from "@/components/content/Heading";
import Section from "@/components/content/Section";
import Split from "@/components/content/Split";

const shots = await getCollection("shots");

const shotList = [
    {
        title: "Car Video Shot List",
        categories: [
            {
                title: "Walk Around",
                id: "walk-around",
                shots: [
                    {
                        title: "Walk around the car slowly",
                        id: "walk-around-car-slowly",
                    },
                    {
                        title: "Identify interesting points or blemishes",
                        id: "identify-interesting-points-or-blemishes",
                    },
                    {
                        title: "Open and close the doors to show the interior from each side",
                        id: "open-close-doors-show-interior",
                    },
                    {
                        title: "Operate convertible top, sunroof, pop up headlamps, active aero",
                        id: "operate-convertible-top-sunroof-pop-up-headlamps",
                    },
                    {
                        title: "Target duration: 2-5 minutes",
                        id: "target-duration-2-5-minutes",
                    },
                ],
            },
            {
                title: "Cold Engine Start",
                id: "cold-engine-start",
                shots: [
                    {
                        title: "Show a hand against the cold exhaust manifold (with a helper in the driver seat)",
                        id: "show-hand-against-cold-exhaust-manifold",
                    },
                    {
                        title: "Have a helper turn the ignition on",
                        id: "have-helper-turn-ignition-on",
                    },
                    {
                        title: "Continue video for 30 seconds to show engine idle",
                        id: "continue-30-seconds-show-engine-idle",
                    },
                    {
                        title: "Show gauges in operation",
                        id: "show-gauges-in-operation",
                    },
                    {
                        title: "Target duration: 1 minute",
                        id: "target-duration-1-minute",
                    },
                ],
            },
            {
                title: "Driving",
                id: "driving",
                shots: [
                    {
                        title: "Driving should demonstrate notable ability of the vehicle",
                        id: "driving-demonstrate-ability",
                    },
                    {
                        title: "Target duration: 2-5 minutes",
                        id: "target-duration-2-5-minutes-video",
                    },
                ],
            },
        ],
    },
];
---

<Layout title="Car Photography Shot List">
    <Section>
        <Container>
            <Heading>
                <h1 slot="heading">Car Auction Photography Shot List</h1>
                <div slot="description">
                    If you're looking to sell your car online, here's the
                    necessary photos and videos to present your car in the best
                    possible light.
                </div>
            </Heading>
        </Container>

        <Container>
            <div class="columns-3 space-y-24">
                {
                    shots.map((category) => (
                        <div class="break-inside-avoid" id={category.id}>
                            <Split size="large" border={true}>
                                <div slot="heading" class="text-2xl">
                                    {category.data.title}
                                </div>
                            </Split>

                            <ul class="space-y-6">
                            {category.data.shots.map((shot) => (
                                <li class="space-y-2">
                                    <label class="inline-flex items-start gap-3 !text-lg hover:cursor-pointer">
                                        <input
                                            type="checkbox"
                                            id={slugify(shot.title)}
                                            onchange={`setShot("${slugify(shot.title)}")`}
                                            class="mt-1"
                                        />
                                        <span>{shot.title}</span>
                                    </label>

                                    <div class="ml-8">
                                        {shot.description}
                                    </div>

                                    {shot.examples && (
                                        <a
                                            href="#"
                                            class="ml-8 underline"
                                            onclick={`event.preventDefault(); document.getElementById('dialog${slugify(shot.title)}').showModal()`}
                                        >
                                            See Example
                                        </a>

                                        <dialog id={`dialog${slugify(shot.title)}`} class="mx-auto mt-12 w-[90vw] h-[90vh] md:max-w-[600px] lg:max-w-[800px] text-left rounded-lg shadow-2xl animate-fade-in-scale open:backdrop:animate-fade-in-scale max-h-[800px]" >
                                            <div class="relative overflow-y flex flex-col space-y-8 p-8">
                                                <h3 class="h4">{shot.title}</h3>
                                                <div class="space-y-6">
                                                    {shot.examples.map((example) => (
                                                        <Image
                                                            src={example.url}
                                                            gallery={false}
                                                            showTitle={false}
                                                        />
                                                    ))}
                                                </div>
                                            </div>

                                            <div class="sticky bottom-0 z-10 bg-stone-200 px-8 py-6 w-full flex justify-center">
                                                <a class="w-full lg:w-fit button text-lg shadow-lg button-primary" onclick={`document.getElementById('dialog${slugify(shot.title)}').close()`}>Close</a>
                                            </div>
                                        </dialog>
                                    )}
                                </li>
                            ))}
                        </ul>
                        </div>
                    ))
                }
            </div>
        </Container>
    </Section>
</Layout>

<script is:inline>
    var allShots = document.querySelectorAll(`[type*="checkbox"]`);
    allShots.forEach((el) => {
        var checked = JSON.parse(localStorage.getItem(el.id));
        document.getElementById(el.id).checked = checked;
    });

    function setShot(id) {
        if (localStorage.getItem(id) === "true") {
            localStorage.removeItem(id);

            return;
        } else {
            localStorage.setItem(id, "true");
        }
    }

    const dialogs = document.querySelectorAll("dialog");

    for (let dialog of dialogs) {
        dialog.addEventListener("click", (event) => {
            const dialogDimensions = dialog.getBoundingClientRect();
            if (
                event.clientX < dialogDimensions.left ||
                event.clientX > dialogDimensions.right ||
                event.clientY < dialogDimensions.top ||
                event.clientY > dialogDimensions.bottom
            ) {
                dialog.close(); // Close the dialog if the click is outside
            }
        });
    }
</script>
