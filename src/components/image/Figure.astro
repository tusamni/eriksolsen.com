---
// props
export interface Props {
    src: string;
    metadata?: boolean;
    sizes?: string;
    figureClass?: string;
}
const {
    src,
    metadata = true,
    sizes = "100vw",
    figureClass,
    ...attrs
} = Astro.props;

// functions
import { getPublicPath } from "@/functions/Media";

// config
import { imageConfig } from "@/src/config";

// load image data from content collection
import { getEntryBySlug } from "astro:content";
const image = await getEntryBySlug("images", src);

// if dev load basic image defaults
const formats =
    import.meta.env.MODE === "development" ? ["jpg"] : imageConfig.imageFormats;
const widths =
    import.meta.env.MODE === "development" ? [1000] : imageConfig.imageSizes;
---

<div class:list={[figureClass, "overflow-hidden relative group"]}>
    <img
        src={getPublicPath(`${image.slug}.jpg`)}
        alt={image.data.description}
        sizes={sizes}
        {...attrs}
    />

    {
        metadata && (
            <a
                href={`/photography/photo/${image.slug}`}
                title="View photo details"
                class="absolute flex gap-1 items-center lg:group-hover:bottom-0 bottom-0 left-0 bg-white uppercase text-sm md:text-base px-4 py-3 lg:p-6 font-medium transition-all duration-200 lg:-bottom-full">
                {image.data.title}
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke-width="1.5"
                    stroke="currentColor"
                    class="w-5 h-5">
                    <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z"
                    />
                </svg>
            </a>
        )
    }
</div>
