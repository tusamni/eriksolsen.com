---
// layouts
import Layout from "@/layouts/BaseLayout";

// components
import { cosmic } from "@/library/cosmic";
import { formatDate, timeAgo } from "@/functions/DateTime";
import Container from "@/components/content/Container";
import Flex from "@/components/image/Flex";
import FlexItem from "@/components/image/FlexItem";
import Figure from "@/components/image/Image";
import Related from "@/components/shoots/related/Primary";

// content
export async function getStaticPaths() {
	const { objects: shoots } = await cosmic.objects
		.find({ type: "shoots" })
		.props("title, slug, metadata")
		.options({
			media: { props: "name, alt_text, width, height, metadata" },
		})
		.depth(1);

	return shoots.map((shoot) => ({
		params: { slug: shoot.metadata.slug },
		props: { shoot },
	}));
}
const { shoot } = Astro.props;

// loop through the photos and get all lenses used
const allLenses = [];
for (let image of shoot.metadata.images.gallery) {
	allLenses.push(image.metadata.lens);
}
// return only the unique lenses
const uniqueLenses = [...new Set(allLenses)];
---

<Layout title={shoot.title} description={shoot.metadata.excerpt} footerPadding={true} navPadding={false}>
	<div class="h-[40vh] max-h-[1200px] relative">
		<Figure src={shoot.metadata.images.thumbnail.url} figureClass="absolute w-full h-full" class="w-full h-full object-cover" sizes="100vw" gallery={false} showTitle={false} />
		<div class="bg-gradient-to-br from-white/90 via-neutral-700/80 to-neutral-900/90 absolute w-full h-full"></div>
	</div>

	<Container>
		<h1 class="-mt-72 ml-10 text-balance max-w-4xl z-10 relative text-white text-8xl">{shoot.title}</h1>
		<div class="-mt-3 rounded-tr-md rounded-tl-md relative px-12 py-20 bg-white z-10">
			<div class="grid grid-cols-12 gap-y-12">
				<div class="col-span-9 col-start-4 space-y-8">
					<h2 class="text-balance text-4xl leading-snug text-gray-900 font-normal" set:html={shoot.metadata.excerpt} />
				</div>

				<div class="col-span-3 space-y-12">
					<div class="space-y-3">
						<p class="font-medium italic">Details</p>

						<div class="space-y-1">
							<time datetime={formatDate(shoot.metadata.date)}>
								{timeAgo(new Date(shoot.metadata.date))}
							</time>

							<div>
								{shoot.metadata.shoot.location}
							</div>
						</div>
					</div>
					<div class="space-y-3">
						<p class="font-medium italic">Gear</p>
						<ul>
							<li>Sony Alpha ILCE-7M3</li>
							{uniqueLenses.map((l) => <li>{l}</li>)}
						</ul>
					</div>

					{
						shoot.metadata.auction.url && (
							<div class="space-y-1">
								<p class="font-medium italic">Auction</p>
								<div>
									Listed on{" "}
									<a href={shoot.metadata.auction.url} target="_blank" class="underline">
										{shoot.metadata.auction.site.value}
									</a>
								</div>
								<div>
									{shoot.metadata.auction.sold ? `Sold for` : `Bid to`} ${Intl.NumberFormat().format(shoot.metadata.auction.price)}
								</div>
							</div>
						)
					}

					{
						shoot.metadata.related && (
							<div class="space-y-3">
								<p class="font-medium">Related Shoots</p>
								{shoot.metadata.related.map((r) => (
									<Related shoot={r} />
								))}
							</div>
						)
					}
				</div>

				<div class="col-span-9">
					<div class="grid grid-cols-4 gap-4">
						{shoot.metadata.images.gallery.map((g) => <Figure src={g.url} figureClass="w-full h-full aspect-square" class="w-full h-full object-cover" sizes="(min-width: 640px) 300px, 100vw" showTitle={false} />)}
					</div>
				</div>
			</div>
		</div>
	</Container>
</Layout>
