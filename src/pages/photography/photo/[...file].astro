---
// layout
import Layout from "@/layouts/BaseLayout";

// components
import { getPublicPath } from "@/functions/Media";
import Container from "@/components/content/Container";
import Picture from "@/components/image/Picture";
import Split from "@/components/content/Split";

// content
import { CollectionEntry, getEntryBySlug, getCollection } from "astro:content";
type Props = CollectionEntry<"images">;

// functions
import { formatDate } from "@/functions/DateTime";

export async function getStaticPaths() {
    const filename = await getCollection("images");

    const paths = [];
    filename.map((f) => {
        let path = f.slug;
        paths.push(path);
    });

    return paths.map((p) => ({
        params: { file: p },
    }));
}

const params = Astro.params;
const image = await getEntryBySlug("images", params.file);

console.log(params)
---

<Layout classes="space-y-24" title={`${image.data.title} - ${image.data.description}`} description={`A detailed image of a ${image.data.title} shot by Erik Olsen on ${formatDate(image.data.date)}`}>
    <Container classes="mt-24">
        <h1 class="text-center">{image.data.title}</h1>
    </Container>

    <Container size="large">
        <Picture src={`${image.slug}.jpg`} classes="w-full" sizes="100vw" />
    </Container>

    <Container padBottom={true}>
        <Split>
            <div slot="heading" class="space-y-6">
                <h2>Metadata</h2>
                <p class="text-xl">Feel free to download the full size image by clicking the button below.</p>
                <div>
                    <a target="_blank" href={getPublicPath(`${image.slug}.jpg`)} class="button button-ghost text-lg" title="Download full size image">Download Image</a>
                </div>
            </div>

            <div class="space-y-12">
                <div class="text-4xl font-semibold tracking-tight">
                    {image.data.description}
                </div>

                <div class="text-xl">
                    <div class="space-y-3">
                        <div>
                            Taken on {formatDate(image.data.date)}
                        </div>
                        <div>
                            Shot using a {`${image.data.cameraMake} ${image.data.cameraModel}`}
                        </div>
                        <div>
                            With a
                            {image.data.lens}
                        </div>
                    </div>
                </div>

                <div class="flex gap-6 text-xl tracking-tight">
                    <div>{image.data.settingsFocalLength}</div>
                    <div>{image.data.settingsfStop}</div>
                    <div>{image.data.settingsISO}</div>
                    <div>{image.data.settingsShutter}</div>
                </div>
            </div>
        </Split>
    </Container>
</Layout>

<Container padBottom={true} />
