---
// layout
import Layout from "@/layouts/BaseLayout";

// components
import { stringToSlug, slugToString } from "@/functions/Url";
import { getCollection } from "astro:content";
import Container from "@/components/content/Container";
import Filters from "@/components/shoots/Filters";
import Heading from "@/components/content/Heading";
import Pagination from "@/components/Pagination";
import Primary from "@/components/shoots/cards/Primary";
import Split from "@/components/content/Split";

export async function getStaticPaths({ paginate }) {
    const allShoots = (
        await getCollection("shoots", ({ data }) => {
            return data.brand;
        })
    ).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

    const allManufacturers = [];
    allShoots.map((s) => {
        if (s.data.brand) {
            allManufacturers.push(stringToSlug(s.data.brand));
        }
    });
    const uniqueManufacturers = [...new Set(allManufacturers)];

    return uniqueManufacturers.flatMap((manufacturer) => {
        const filteredShoots = allShoots.filter((shoot) => stringToSlug(shoot.data.brand).includes(manufacturer));

        return paginate(filteredShoots, {
            params: { manufacturer: manufacturer },
            props: { manufacturer },
            pageSize: 6,
        });
    });
}
const { page, manufacturer } = Astro.props;
---

<Layout>
    <Container>
        <Heading>
            <h1 slot="heading" class="capitalize">
                {slugToString(manufacturer)}<br />Photoshoots
            </h1>
        </Heading>
    </Container>

    <Container>
        <Split size="small" float={true} reverse={true}>
            <div slot="heading" class="space-y-8">
                <Filters />
            </div>

            <div>
                <div id="top"></div>

                <div class="space-y-6">
                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8" id="shoots">
                        {page.data.map((s, i) => <Primary shoot={s} sizes="(min-width: 768px) 80vw, (min-width: 1024px) 50vw, (min-width: 1280px) 450px, 100vw" loading={i == 0 ? `eager` : `lazy`} />)}
                    </div>

                    <div class="flex justify-between items-center">
                        <div class="hidden sm:block text-sm">Page {page.currentPage} of {page.lastPage}</div>

                        <Pagination page={page} />
                    </div>
                </div>
            </div>
        </Split>
    </Container>
</Layout>
