---
// layouts
import Layout from "@/layouts/BaseLayout";

// components
import { timeAgo, formatDate } from "@/functions/DateTime";
import { getCollection } from "astro:content";
import Container from "@/components/content/Container";
import Figure from "@/components/image/Figure";
import Grid from "@/components/image/Grid";
import Heading from "@/components/content/Heading";
import Picture from "@/components/image/Picture";
import Prose from "@/components/content/Prose";
import RelatedPrimary from "@/components/shoots/related/Primary";
import RelatedSecondary from "@/components/shoots/related/Secondary";
import Section from "@/components/content/Section";
import Split from "@/components/content/Split";

// content
export async function getStaticPaths() {
    const shoots = await getCollection("shoots");
    return shoots.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// let columns;
// let span = false;
// if (entry.data.images.gallery.length % 3 == 0) {
//     columns = "grid-cols-3";
// } else if (entry.data.images.gallery.length >= 8 && entry.data.images.gallery.length % 4 == 0) {
//     columns = "grid-cols-4";
// } else if (entry.data.images.gallery.length % 2 == 0) {
//     columns = "grid-cols-2";
// } else {
//     columns = "grid-cols-2";
//     span = true;
// }
---

<Layout title={entry.data.title} description={entry.data.description} footerPadding={true} navPadding={true}>
    <Section>
        <Container>
            <div class="space-y-16">
                <Heading>
                    <h1 slot="heading">{entry.data.title}</h1>
                    <div slot="description">{entry.data.description}</div>
                </Heading>
            </div>
        </Container>

        {
            entry.data.customLayout ? (
                <article class="space-y-12">
                    <Content />
                </article>
            ) : (
                <Container size="large">
                    <Figure src={entry.data.images.hero} class="h-full w-full object-cover" figureClass={!entry.body && "mb-4"} />

                    {entry.body && (
                        <div class="my-32">
                            <Container>
                                <Prose>
                                    <Content />
                                </Prose>
                            </Container>
                        </div>
                    )}

                    <div class="flex flex-wrap gap-4">
                        {entry.data.images.gallery.map((item, i, row) => (
                            <div class="flex-auto h-[400px]">
                                <Picture src={item} class="h-full w-full object-cover" />
                            </div>
                        ))}
                    </div>
                </Container>
            )
        }

        <Container>
            <h3>Comments (23)</h3>
        </Container>
    </Section>
</Layout>

<style>
    :global(h2) {
        @apply text-balance;
    }
</style>
