---
// layouts
import Layout from "@/layouts/BaseLayout";

// components
import { timeAgo, formatDate } from "@/functions/DateTime";
import { getCollection } from "astro:content";
import Container from "@/components/content/Container";
import Grid from "@/components/image/Grid";
import Heading from "@/components/content/Heading";
import Picture from "@/components/image/Picture";
import Prose from "@/components/content/Prose";
import RelatedPrimary from "@/components/shoots/related/Primary";
import RelatedSecondary from "@/components/shoots/related/Secondary";
import Section from "@/components/content/Section";
import Split from "@/components/content/Split";

// content
export async function getStaticPaths() {
    const shoots = await getCollection("shoots");
    return shoots.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout title={entry.data.title} description={entry.data.description} footerPadding={true} navPadding={false}>
    <Picture src={entry.data.images.hero} class="h-[50svh] object-cover" rounded={false} />

    <Section>
        <div class="bg-regent-900 py-16">
            <Container entry.data.customLayout && size="large">
                <Heading>
                    <h1 slot="heading" class="text-regent-50">{entry.data.title}</h1>
                    <div slot="description" class="text-regent-50">{entry.data.description}</div>
                </Heading>
            </Container>
        </div>

        <Container entry.data.customLayout && size="large">
            {
                entry.data.customLayout ? (
                    <Content />
                ) : (
                    <>
                        <Split size="base" float={true}>
                            <div slot="heading" class="space-y-12">
                                <Prose>
                                    <Content />
                                </Prose>

                                <div class="space-y-3">
                                    <div class="text-2xl font-medium">Shoot Details</div>
                                    <ul class="text-lg space-y-2">
                                        <li>
                                            Shot <time datetime={entry.data.date}>{timeAgo(entry.data.date)}</time> on {formatDate(entry.data.date)}
                                        </li>
                                        <li>Filed under "{entry.data.category}"</li>
                                        <li>
                                            <div>{entry.data.images.gallery.length} photos</div>
                                        </li>
                                        <li>Shot in {entry.data.location.text}</li>
                                    </ul>
                                </div>

                                {entry.data.auction && (
                                    <div class="space-y-3">
                                        <div class="text-2xl font-medium">Auction Details</div>
                                        <ul class="mt-4 text-lg space-y-2">
                                            <li>Auctioned on {entry.data.auction.site}</li>
                                            <li>
                                                {entry.data.auction.sold ? `Sold for` : `Bid to`} ${entry.data.auction.price.toLocaleString()}
                                            </li>
                                        </ul>
                                        <a class="button button-ghost text-sm" href={entry.data.auction.url} class="underline">
                                            View Auction
                                        </a>
                                    </div>
                                )}
                            </div>

                            <Grid columns={entry.data.images.columns}>
                                {entry.data.images.gallery.map((p) => (
                                    <div class:list={["grow", entry.data.images.columns]}>
                                        <Picture class="object-cover w-full h-full rounded-lg" src={p} />
                                    </div>
                                ))}
                            </Grid>
                        </Split>
                    </>
                )
            }
        </Container>

        <Container entry.data.customLayout && size="large">
            <div class="space-y-16">
                <h2 class="text-center">Related Shoots</h2>
                <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                    <RelatedPrimary slug={entry.data.related[0]} />

                    <div class="space-y-8">
                        {entry.data.related.slice(1).map((r) => <RelatedSecondary slug={r} />)}
                    </div>
                </div>
            </div>
        </Container>
    </Section>

    <style>
        :global(h2) {
            @apply text-balance;
        }
    </style>
</Layout>
