---
// imports
import { imageConfig } from "@/config";
import { cosmic } from "@/library/cosmic";

// props
export interface Props {
	src: string;
	gallery: boolean;
	classes?: string;
}
const { src, gallery = true, classes, ...attrs } = Astro.props;

// content
const imageName = src.replace("https://cdn.cosmicjs.com/", "");
const { media: imageMetadata } = await cosmic.media.findOne({ name: imageName }).props(["name", "imgix_url", "width", "height"]);

// loop through all the necessary image widths
const imageOptimized = [];
for (let size of imageConfig.imageSizes) {
	imageOptimized.push(`${imageMetadata.imgix_url}?w=${size}&auto=format ${size}w`);
}

const imageSrcSet = imageOptimized.join(", ");
---

<picture class:list={[classes, gallery && "gallery hover:cursor-pointer"]}>
	{
		imageMetadata ? (
			<img
				srcset={imageSrcSet}
				src={imageMetadata.imgix_url}
				alt=""
				width={imageMetadata.width}
				height={imageMetadata.height}
				data-img={imageMetadata.imgix_url}
				data-width={imageMetadata.width}
				data-height={imageMetadata.height}
				data-caption=""
				{...attrs}
			/>
		) : (
			<img src={imageMetadata.imgix_url} srcset={imageSrcSet} {...attrs} />
		)
	}
</picture>
